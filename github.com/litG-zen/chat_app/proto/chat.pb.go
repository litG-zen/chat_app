// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: proto/chat.proto

package chatpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_UNKNOWN MessageType = 0
	MessageType_JOIN    MessageType = 1
	MessageType_LEAVE   MessageType = 2
	MessageType_MESSAGE MessageType = 3
	MessageType_TYPING  MessageType = 4
	MessageType_PING    MessageType = 5
	MessageType_PONG    MessageType = 6
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "UNKNOWN",
		1: "JOIN",
		2: "LEAVE",
		3: "MESSAGE",
		4: "TYPING",
		5: "PING",
		6: "PONG",
	}
	MessageType_value = map[string]int32{
		"UNKNOWN": 0,
		"JOIN":    1,
		"LEAVE":   2,
		"MESSAGE": 3,
		"TYPING":  4,
		"PING":    5,
		"PONG":    6,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chat_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_proto_chat_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{0}
}

type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // sender
	To            []string               `protobuf:"bytes,3,rep,name=to,proto3" json:"to,omitempty"`                       // recipients; empty -> broadcast
	Text          string                 `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Type          MessageType            `protobuf:"varint,6,opt,name=type,proto3,enum=chat.MessageType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_proto_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChatMessage) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ChatMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ChatMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ChatMessage) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_UNKNOWN
}

type IsOnlineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // user being queried
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsOnlineRequest) Reset() {
	*x = IsOnlineRequest{}
	mi := &file_proto_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsOnlineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsOnlineRequest) ProtoMessage() {}

func (x *IsOnlineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsOnlineRequest.ProtoReflect.Descriptor instead.
func (*IsOnlineRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{1}
}

func (x *IsOnlineRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type IsOnlineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Online        bool                   `protobuf:"varint,1,opt,name=online,proto3" json:"online,omitempty"` // optionally add fields like server_time or node_id if needed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsOnlineResponse) Reset() {
	*x = IsOnlineResponse{}
	mi := &file_proto_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsOnlineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsOnlineResponse) ProtoMessage() {}

func (x *IsOnlineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsOnlineResponse.ProtoReflect.Descriptor instead.
func (*IsOnlineResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_proto_rawDescGZIP(), []int{2}
}

func (x *IsOnlineResponse) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

var File_proto_chat_proto protoreflect.FileDescriptor

const file_proto_chat_proto_rawDesc = "" +
	"\n" +
	"\x10proto/chat.proto\x12\x04chat\"\x9f\x01\n" +
	"\vChatMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x0e\n" +
	"\x02to\x18\x03 \x03(\tR\x02to\x12\x12\n" +
	"\x04text\x18\x04 \x01(\tR\x04text\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12%\n" +
	"\x04type\x18\x06 \x01(\x0e2\x11.chat.MessageTypeR\x04type\"*\n" +
	"\x0fIsOnlineRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"*\n" +
	"\x10IsOnlineResponse\x12\x16\n" +
	"\x06online\x18\x01 \x01(\bR\x06online*\\\n" +
	"\vMessageType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\b\n" +
	"\x04JOIN\x10\x01\x12\t\n" +
	"\x05LEAVE\x10\x02\x12\v\n" +
	"\aMESSAGE\x10\x03\x12\n" +
	"\n" +
	"\x06TYPING\x10\x04\x12\b\n" +
	"\x04PING\x10\x05\x12\b\n" +
	"\x04PONG\x10\x062z\n" +
	"\vChatService\x120\n" +
	"\x04Chat\x12\x11.chat.ChatMessage\x1a\x11.chat.ChatMessage(\x010\x01\x129\n" +
	"\bIsOnline\x12\x15.chat.IsOnlineRequest\x1a\x16.chat.IsOnlineResponseB+Z)github.com/litG-zen/chat_app/proto;chatpbb\x06proto3"

var (
	file_proto_chat_proto_rawDescOnce sync.Once
	file_proto_chat_proto_rawDescData []byte
)

func file_proto_chat_proto_rawDescGZIP() []byte {
	file_proto_chat_proto_rawDescOnce.Do(func() {
		file_proto_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_chat_proto_rawDesc), len(file_proto_chat_proto_rawDesc)))
	})
	return file_proto_chat_proto_rawDescData
}

var file_proto_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_chat_proto_goTypes = []any{
	(MessageType)(0),         // 0: chat.MessageType
	(*ChatMessage)(nil),      // 1: chat.ChatMessage
	(*IsOnlineRequest)(nil),  // 2: chat.IsOnlineRequest
	(*IsOnlineResponse)(nil), // 3: chat.IsOnlineResponse
}
var file_proto_chat_proto_depIdxs = []int32{
	0, // 0: chat.ChatMessage.type:type_name -> chat.MessageType
	1, // 1: chat.ChatService.Chat:input_type -> chat.ChatMessage
	2, // 2: chat.ChatService.IsOnline:input_type -> chat.IsOnlineRequest
	1, // 3: chat.ChatService.Chat:output_type -> chat.ChatMessage
	3, // 4: chat.ChatService.IsOnline:output_type -> chat.IsOnlineResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_chat_proto_init() }
func file_proto_chat_proto_init() {
	if File_proto_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_chat_proto_rawDesc), len(file_proto_chat_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chat_proto_goTypes,
		DependencyIndexes: file_proto_chat_proto_depIdxs,
		EnumInfos:         file_proto_chat_proto_enumTypes,
		MessageInfos:      file_proto_chat_proto_msgTypes,
	}.Build()
	File_proto_chat_proto = out.File
	file_proto_chat_proto_goTypes = nil
	file_proto_chat_proto_depIdxs = nil
}
